
PROC merge(int a[], int first, int mid, int last) {

	int b[10];
	
	int i = first, j = mid+1, k = 0;
	while (i <= mid and j <= last)
		if (a[i] < a[j]) {
			b[k] = a[i];
			k++;
			i++;
		}
		else {
			b[k] = a[j];
			k++;
			j++;
		}
	
	while (i <= mid) {
		b[k] = a[i];
		k++;
		i++;
	}
	
	while (j <= last) {
		b[k] = a[j];
		k++;
		j++;
	}
	
	FOR (i, 0 TO k-1)
		a[first+i] = b[i];
	
}


PROC mergesort(int a[], int first, int last) {
	
	int mid;
	
	if (first >= last) return;	
	
	mid = (first + last) / 2;
	mergesort(a, first, mid);
	mergesort(a, mid+1, last);
	merge(a, first, mid, last);
		
}


PROGRAM test() {

	int i;
    const int N = 10;
    int a[N];
	WRITESPLN("Give", N, "elements of an integer matrix");
	FOR (i, 0 TO N-1) 
		a[i] = READ_INT();
	
	mergesort(a, 0, N-1);

	FOR (i, 0 TO N-1)
		WRITELN(a[i]);

}




